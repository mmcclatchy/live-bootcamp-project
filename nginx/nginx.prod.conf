events {
    worker_connections 1024;
}

http {
    resolver 127.0.0.11 valid=30s;  # Docker's embedded DNS server

    log_format grpc_json escape=json '{"timestamp":"$time_iso8601",'
                                      '"client":"$remote_addr",'
                                      '"uri":"$uri",'
                                      '"http-status":$status,'
                                      '"grpc-status":$grpc_status,'
                                      '"upstream":"$upstream_addr",'
                                      '"rx-bytes":$request_length,'
                                      '"tx-bytes":$bytes_sent}';

    map $upstream_trailer_grpc_status $grpc_status {
        default $upstream_trailer_grpc_status;
        ''      $sent_http_grpc_status;
    }

    # Redirect all HTTP traffic to HTTPS
    server {
        listen 80;
        listen [::]:80;
        server_name rust-bc.markmcclatchy.com;

        location /.well-known/acme-challenge/ {
            root /var/www/certbot;
        }

        location /app/assets/ {
            proxy_pass http://app-service:8000/assets/;
        }

        location /auth/assets/ {
            proxy_pass http://auth-service:3000/assets/;
        }

        location / {
            return 301 https://$host$request_uri;
        }
    }

    server {
        listen 443 ssl;
        server_name rust-bc.markmcclatchy.com;

        ssl_certificate /etc/letsencrypt/live/rust-bc.markmcclatchy.com/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/rust-bc.markmcclatchy.com/privkey.pem;

        # gRPC service
        location /auth.AuthService/ {
            grpc_pass grpc://auth-service:50051;
            access_log /var/log/nginx/grpc_access.log grpc_json;
            error_log /var/log/nginx/grpc_error.log;
        }

        # REST API for auth-service
        location /auth/ {
            set $upstream_auth auth-service:3000;
            proxy_pass http://$upstream_auth/;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
        }

        # REST API for app-service
        location /app/ {
            set $upstream_app app-service:8000;
            proxy_pass http://$upstream_app/;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
        }

        location /app/assets/ {
            proxy_pass http://app-service:8000/assets/;
        }

        location /auth/assets/ {
            proxy_pass http://auth-service:3000/assets/;
        }

        # Handle root path
        location / {
            set $upstream_app app-service:8000;
            proxy_pass http://$upstream_app/;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }
}
