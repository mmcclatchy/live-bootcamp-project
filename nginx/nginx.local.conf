events {
    worker_connections 1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';

    log_format auth_json escape=json '{"time":"$time_iso8601",'
                                     '"remote_addr":"$remote_addr",'
                                     '"request":"$request",'
                                     '"status":$status,'
                                     '"body_bytes_sent":$body_bytes_sent,'
                                     '"http_referer":"$http_referer",'
                                     '"http_user_agent":"$http_user_agent",'
                                     '"http_x_forwarded_for":"$http_x_forwarded_for"}';

    log_format grpc_json escape=json '{"timestamp":"$time_iso8601",'
                                      '"client":"$remote_addr",'
                                      '"uri":"$uri",'
                                      '"http-status":$status,'
                                      '"grpc-status":$grpc_status,'
                                      '"upstream":"$upstream_addr",'
                                      '"rx-bytes":$request_length,'
                                      '"tx-bytes":$bytes_sent}';

    map $upstream_trailer_grpc_status $grpc_status {
        default $upstream_trailer_grpc_status;
        ''      $sent_http_grpc_status;
    }

    server {
        listen 80;
        listen [::]:80;
        listen 8080 http2;
        server_name localhost;

        # gRPC service
        location /auth.AuthService/ {
            access_log /dev/stdout grpc_json;
            error_log /dev/stderr debug;

            grpc_pass grpc://auth-service:50051;
        }

        # REST API for auth-service
        location /auth/ {
            access_log /dev/stdout auth_json;
            error_log /dev/stderr debug;

            proxy_pass http://auth-service:3000/;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_cache_bypass $http_upgrade;
        }

        # REST API for app-service
        location /app/ {
            proxy_pass http://app-service:8000/;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_cache_bypass $http_upgrade;
        }

        # Handle static assets for app-service
        location /app/assets/ {
            proxy_pass http://app-service:8000/assets/;
            access_log /dev/stdout main;
            error_log /dev/stderr debug;
        }

        # Handle static assets for auth-service
        location /auth/assets/ {
            proxy_pass http://auth-service:3000/assets/;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            access_log /dev/stdout main;
            error_log /dev/stderr debug;
        }

        # Handle root path
        location / {
            proxy_pass http://app-service:8000/;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }
    }
}
