services:
  app-service:
    image: mmcclatchy/app-service
    build:
      context: ./app-service
      dockerfile: Dockerfile
    restart: always
    environment:
      REST_AUTH_SERVICE_URL: https://rust-bc.markmcclatchy.com/auth
      REST_AUTH_SERVICE_HOST: auth-service:3000
      GRPC_AUTH_SERVICE_HOST: auth-service:50051
    ports:
      - "8000:8000"
    depends_on:
      auth-service:
          condition: service_started
    networks:
      - app-network

  auth-service:
    image: mmcclatchy/auth-service
    build:
      context: ./auth-service
      dockerfile: Dockerfile
    restart: always
    ports:
      - "3000:3000"
      - "50051:50051"
    environment:
      DATABASE_URL: "postgres://postgres:${POSTGRES_PASSWORD}@db:5432"
      REST_AUTH_SERVICE_URL: https://rust-bc.markmcclatchy.com/auth
      RUST_LOG: info
      RUST_BACKTRACE: 1
      JWT_SECRET: ${JWT_SECRET}
    depends_on:
      - db
      - redis
    networks:
      - app-network

  db:
    image: postgres:15.2-alpine
    build:
      context: ./database
      dockerfile: Dockerfile
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - db:/var/lib/postgresql/data
      - ./database/test_db_cleanup.sql:/docker-entrypoint-initdb.d/test_db_cleanup.sql
    networks:
      - app-network

  redis:
    image: redis:7.0-alpine
    restart: always
    ports:
      - "6379:6379"
    networks:
      - app-network

  nginx:
    image: nginx:stable
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.prod.conf:/etc/nginx/nginx.conf:ro
      - ./certbot/www:/var/www/certbot/:ro
      - ./certbot/conf:/etc/letsencrypt:ro
    networks:
      - app-network
    depends_on:
      - app-service
      - auth-service

  certbot:
    image: certbot/certbot:latest
    volumes:
      - ./certbot/www/:/var/www/certbot/:rw
      - ./certbot/conf/:/etc/letsencrypt/:rw

networks:
  app-network:
    driver: bridge

volumes:
  db:
    driver: local
