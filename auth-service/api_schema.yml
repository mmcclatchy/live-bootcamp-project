openapi: 3.0.0
info:
  title: Authentication Service API
  description: This is an API for an authentication service using JWT and optional email 2FA.
  version: 1.0.0
  contact:
    name: Mark McClatchy

servers:
  - url: 'http://localhost:3000'
    description: Main server

tags:
  - name: Authentication
    description: Endpoints related to user authentication
  - name: UI
    description: Endpoints serving user interface components

paths:
  /:
    get:
      summary: Login/Sign-up UI
      description: This route serves the login/signup UI for user authentication.
      operationId: getLoginSignupUI
      tags:
        - UI
      responses:
        '200':
          description: Login/Signup UI
          content:
            text/html:
              schema:
                type: string
                example: '<html><body><h1>Login/Signup</h1></body></html>'

  /signup:
    post:
      summary: Register a new user
      description: Creates a new user account with the provided email, password, and 2FA preference.
      operationId: signupUser
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
                  format: password
                requires2FA:
                  type: boolean
                  description: Flag to enable two-factor authentication
      responses:
        '201':
          description: User created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: User created successfully!
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '409':
          description: Email already exists
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '422':
          description: Unprocessable content
        '500':
          description: Unexpected error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string

  /login:
    post:
      summary: Authenticate user and return JWT
      description: Authenticates a user with their email and password, returning a JWT token or prompting for 2FA if enabled.
      operationId: loginUser
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
                  format: password
      responses:
        '200':
          description: Login successful
          headers:
            Set-Cookie:
              schema:
                type: string
                example: jwt=your_token; HttpOnly; SameSite=Lax; Secure; Path=/
        '206':
          description: Login requires 2FA
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  loginAttemptId:
                    type: string
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '401':
          description: Authentication failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '422':
          description: Unprocessable content
        '500':
          description: Unexpected error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string

  /verify-2fa:
    post:
      summary: Verify 2FA token
      description: Verifies the 2FA token provided by the user during the login process.
      operationId: verify2FAToken
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                loginAttemptId:
                  type: string
                2FACode:
                  type: string
      responses:
        '200':
          description: 2FA token verified successfully
          headers:
            Set-Cookie:
              schema:
                type: string
                example: jwt=your_token; HttpOnly; SameSite=Lax; Secure; Path=/
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '401':
          description: Authentication failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '422':
          description: Unprocessable content
        '500':
          description: Unexpected error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string

  /logout:
    post:
      summary: Logout user
      description: Logs out the user by invalidating their JWT token.
      operationId: logoutUser
      tags:
        - Authentication
      parameters:
        - in: cookie
          name: jwt
          schema:
            type: string
          required: true
          description: JWT token for authentication
      responses:
        '200':
          description: Logout successful
          headers:
            Set-Cookie:
              schema:
                type: string
                example: jwt=; Expires=Thu, 01 Jan 1970 00:00:00 GMT; HttpOnly; SameSite=Lax; Secure; Path=/
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '401':
          description: JWT is not valid
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '500':
          description: Unexpected error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string

  /verify-token:
    post:
      summary: Verify JWT
      description: Verifies if a provided JWT token is valid.
      operationId: verifyJWTToken
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string
      responses:
        '200':
          description: Token is valid
        '401':
          description: JWT is not valid
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '422':
          description: Unprocessable content
        '500':
          description: Unexpected error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
